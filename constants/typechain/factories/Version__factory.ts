/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Version, VersionInterface } from '../Version'

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'version',
        type: 'uint32',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'contractVersion',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161011f38038061011f83398101604081905261002f9161003d565b63ffffffff1660805261006a565b60006020828403121561004f57600080fd5b815163ffffffff8116811461006357600080fd5b9392505050565b608051609d6100826000396000602f0152609d6000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a0a8e46014602d575b600080fd5b7f000000000000000000000000000000000000000000000000000000000000000060405163ffffffff909116815260200160405180910390f3fea264697066735822122081724d12a3482e6fba7f353d46ef420f97ee63154023cb24fe9bffe7496040e664736f6c634300080a0033'

type VersionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: VersionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Version__factory extends ContractFactory {
  constructor(...args: VersionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    version: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Version> {
    return super.deploy(version, overrides || {}) as Promise<Version>
  }
  override getDeployTransaction(
    version: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(version, overrides || {})
  }
  override attach(address: string): Version {
    return super.attach(address) as Version
  }
  override connect(signer: Signer): Version__factory {
    return super.connect(signer) as Version__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): VersionInterface {
    return new utils.Interface(_abi) as VersionInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Version {
    return new Contract(address, _abi, signerOrProvider) as Version
  }
}
