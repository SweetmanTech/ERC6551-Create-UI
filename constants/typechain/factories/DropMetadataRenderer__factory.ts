/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  DropMetadataRenderer,
  DropMetadataRendererInterface,
} from '../DropMetadataRenderer'

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'metadataBase',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'metadataExtension',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'contractURI',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'freezeAt',
        type: 'uint256',
      },
    ],
    name: 'MetadataUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'provenanceHash',
        type: 'bytes32',
      },
    ],
    name: 'ProvenanceHashUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'contractURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'initializeWithData',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'metadataBaseByContract',
    outputs: [
      {
        internalType: 'string',
        name: 'base',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'extension',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'contractURI',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'freezeAt',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'provenanceHashes',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'baseUri',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'newContractUri',
        type: 'string',
      },
    ],
    name: 'updateMetadataBase',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'metadataBase',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'metadataExtension',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'newContractURI',
        type: 'string',
      },
      {
        internalType: 'uint256',
        name: 'freezeAt',
        type: 'uint256',
      },
    ],
    name: 'updateMetadataBaseWithDetails',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: 'provenanceHash',
        type: 'bytes32',
      },
    ],
    name: 'updateProvenanceHash',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  ''

type DropMetadataRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: DropMetadataRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class DropMetadataRenderer__factory extends ContractFactory {
  constructor(...args: DropMetadataRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DropMetadataRenderer> {
    return super.deploy(overrides || {}) as Promise<DropMetadataRenderer>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): DropMetadataRenderer {
    return super.attach(address) as DropMetadataRenderer
  }
  override connect(signer: Signer): DropMetadataRenderer__factory {
    return super.connect(signer) as DropMetadataRenderer__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): DropMetadataRendererInterface {
    return new utils.Interface(_abi) as DropMetadataRendererInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DropMetadataRenderer {
    return new Contract(address, _abi, signerOrProvider) as DropMetadataRenderer
  }
}
