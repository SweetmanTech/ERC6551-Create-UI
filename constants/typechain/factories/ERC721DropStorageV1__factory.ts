/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  ERC721DropStorageV1,
  ERC721DropStorageV1Interface,
} from '../ERC721DropStorageV1'

const _abi = [
  {
    inputs: [],
    name: 'config',
    outputs: [
      {
        internalType: 'contract IMetadataRenderer',
        name: 'metadataRenderer',
        type: 'address',
      },
      {
        internalType: 'uint64',
        name: 'editionSize',
        type: 'uint64',
      },
      {
        internalType: 'uint16',
        name: 'royaltyBPS',
        type: 'uint16',
      },
      {
        internalType: 'address payable',
        name: 'fundsRecipient',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'presaleMintsByAddress',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'salesConfig',
    outputs: [
      {
        internalType: 'uint104',
        name: 'publicSalePrice',
        type: 'uint104',
      },
      {
        internalType: 'uint32',
        name: 'maxSalePurchasePerAddress',
        type: 'uint32',
      },
      {
        internalType: 'uint64',
        name: 'publicSaleStart',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'publicSaleEnd',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'presaleStart',
        type: 'uint64',
      },
      {
        internalType: 'uint64',
        name: 'presaleEnd',
        type: 'uint64',
      },
      {
        internalType: 'bytes32',
        name: 'presaleMerkleRoot',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b50610287806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631d2c0b381461004657806361fea7681461012a57806379502c5514610158575b600080fd5b6002546003546004546100cc926cffffffffffffffffffffffffff8116926d0100000000000000000000000000820463ffffffff16927101000000000000000000000000000000000090920467ffffffffffffffff9081169281831692680100000000000000008104831692700100000000000000000000000000000000909104169087565b604080516cffffffffffffffffffffffffff909816885263ffffffff909616602088015267ffffffffffffffff948516958701959095529183166060860152821660808501521660a083015260c082015260e0015b60405180910390f35b61014a610138366004610214565b60056020526000908152604090205481565b604051908152602001610121565b6000546001546101c79173ffffffffffffffffffffffffffffffffffffffff8082169274010000000000000000000000000000000000000000830467ffffffffffffffff16927c0100000000000000000000000000000000000000000000000000000000900461ffff16911684565b6040805173ffffffffffffffffffffffffffffffffffffffff958616815267ffffffffffffffff909416602085015261ffff90921691830191909152919091166060820152608001610121565b60006020828403121561022657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461024a57600080fd5b939250505056fea2646970667358221220de8bab4f8fe3558fe08442697389b8b7dc96a61b8e0604be72c6166fdc2620b464736f6c634300080a0033'

type ERC721DropStorageV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ERC721DropStorageV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class ERC721DropStorageV1__factory extends ContractFactory {
  constructor(...args: ERC721DropStorageV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721DropStorageV1> {
    return super.deploy(overrides || {}) as Promise<ERC721DropStorageV1>
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  override attach(address: string): ERC721DropStorageV1 {
    return super.attach(address) as ERC721DropStorageV1
  }
  override connect(signer: Signer): ERC721DropStorageV1__factory {
    return super.connect(signer) as ERC721DropStorageV1__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ERC721DropStorageV1Interface {
    return new utils.Interface(_abi) as ERC721DropStorageV1Interface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721DropStorageV1 {
    return new Contract(address, _abi, signerOrProvider) as ERC721DropStorageV1
  }
}
