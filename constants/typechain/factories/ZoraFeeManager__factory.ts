/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BigNumberish, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { ZoraFeeManager, ZoraFeeManagerInterface } from '../ZoraFeeManager'

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_defaultFeeBPS',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'feeManagerAdmin',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'FeeOverrideSet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'mediaContract',
        type: 'address',
      },
    ],
    name: 'getZORAWithdrawFeesBPS',
    outputs: [
      {
        internalType: 'address payable',
        name: '',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'mediaContract',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amountBPS',
        type: 'uint256',
      },
    ],
    name: 'setFeeOverride',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a060405234801561001057600080fd5b506040516106e33803806106e383398101604081905261002f9161009d565b6100383361004d565b60808290526100468161004d565b50506100da565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100b057600080fd5b825160208401519092506001600160a01b03811681146100cf57600080fd5b809150509250929050565b6080516105ee6100f560003960006102ee01526105ee6000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063715018a611610050578063715018a6146100c55780638da5cb5b146100cd578063f2fde38b146100f557600080fd5b80632b933f811461006c5780632e0c164914610081575b600080fd5b61007f61007a36600461056c565b610108565b005b61009461008f366004610596565b610273565b6040805173ffffffffffffffffffffffffffffffffffffffff90931683526020830191909152015b60405180910390f35b61007f610311565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100bc565b61007f610103366004610596565b61039e565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6107d1811061021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f46656520746f6f206869676820286e6f742067726561746572207468616e203260448201527f30252900000000000000000000000000000000000000000000000000000000006064820152608401610185565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260016020526040808220849055518392917fcadc101c03be6a205eb345867605c4824dd58c1660c7c1b6ce4a92ad024c0a8b91a35050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260408120548190156102d05750506000805473ffffffffffffffffffffffffffffffffffffffff92831682526001602052604090912054911691565b505060005473ffffffffffffffffffffffffffffffffffffffff16917f00000000000000000000000000000000000000000000000000000000000000009150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610392576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610185565b61039c60006104ce565b565b60005473ffffffffffffffffffffffffffffffffffffffff16331461041f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610185565b73ffffffffffffffffffffffffffffffffffffffff81166104c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610185565b6104cb816104ce565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461056757600080fd5b919050565b6000806040838503121561057f57600080fd5b61058883610543565b946020939093013593505050565b6000602082840312156105a857600080fd5b6105b182610543565b939250505056fea264697066735822122006a9af785ea2da33e889520407653797f0eda16fa2ef0f0c742e857122013eec64736f6c634300080a0033'

type ZoraFeeManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ZoraFeeManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class ZoraFeeManager__factory extends ContractFactory {
  constructor(...args: ZoraFeeManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _defaultFeeBPS: BigNumberish,
    feeManagerAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZoraFeeManager> {
    return super.deploy(
      _defaultFeeBPS,
      feeManagerAdmin,
      overrides || {}
    ) as Promise<ZoraFeeManager>
  }
  override getDeployTransaction(
    _defaultFeeBPS: BigNumberish,
    feeManagerAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_defaultFeeBPS, feeManagerAdmin, overrides || {})
  }
  override attach(address: string): ZoraFeeManager {
    return super.attach(address) as ZoraFeeManager
  }
  override connect(signer: Signer): ZoraFeeManager__factory {
    return super.connect(signer) as ZoraFeeManager__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ZoraFeeManagerInterface {
    return new utils.Interface(_abi) as ZoraFeeManagerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ZoraFeeManager {
    return new Contract(address, _abi, signerOrProvider) as ZoraFeeManager
  }
}
