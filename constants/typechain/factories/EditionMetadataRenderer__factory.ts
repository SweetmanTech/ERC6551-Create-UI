/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  EditionMetadataRenderer,
  EditionMetadataRendererInterface,
} from '../EditionMetadataRenderer'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract SharedNFTLogic',
        name: '_sharedNFTLogic',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'description',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'imageURI',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'animationURI',
        type: 'string',
      },
    ],
    name: 'EditionInitialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'imageURI',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'animationURI',
        type: 'string',
      },
    ],
    name: 'MediaURIsUpdated',
    type: 'event',
  },
  {
    inputs: [],
    name: 'contractURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'initializeWithData',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'tokenInfos',
    outputs: [
      {
        internalType: 'string',
        name: 'description',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'imageURI',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'animationURI',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'tokenId',
        type: 'uint256',
      },
    ],
    name: 'tokenURI',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        internalType: 'string',
        name: 'imageURI',
        type: 'string',
      },
      {
        internalType: 'string',
        name: 'animationURI',
        type: 'string',
      },
    ],
    name: 'updateMediaURIs',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161142738038061142783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051611395610092600039600081816107c201526109e801526113956000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063ba46ae7211610050578063ba46ae7214610094578063c87b56dd146100bf578063e8a3d485146100df57600080fd5b80632f17b8f01461006c578063856a7ffa14610081575b600080fd5b61007f61007a366004610d1c565b6100e7565b005b61007f61008f366004610d90565b6102cd565b6100a76100a2366004610de1565b61039c565b6040516100b693929190610e58565b60405180910390f35b6100d26100cd366004610e91565b610556565b6040516100b69190610eaa565b6100d2610964565b8273ffffffffffffffffffffffffffffffffffffffff811633148061019557506040517f24d7806c00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff8216906324d7806c90602401602060405180830381865afa158015610171573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101959190610ecd565b6101ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f6e6c792061646d696e00000000000000000000000000000000000000000000604482015260640160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8416600090815260208181526040909120845161023992600190920191860190610b43565b5073ffffffffffffffffffffffffffffffffffffffff8416600090815260208181526040909120835161027492600290920191850190610b43565b508373ffffffffffffffffffffffffffffffffffffffff167fc4c1b9223fcebe5f35b9030d3df655018c40e88d70b8a3c63ed851c5d972210f3385856040516102bf93929190610ee8565b60405180910390a250505050565b6000806000838060200190518101906102e69190610f6e565b604080516060810182528481526020808201859052818301849052336000908152808252929092208151805196995094975092955093919261032e9284929190910190610b43565b5060208281015180516103479260018501920190610b43565b5060408201518051610363916002840191602090910190610b43565b50506040513391507ff889a5cdc62274389379cbfade0f225b1d30b7395177fd6aeaab61662b1c6edf906102bf90869086908690610e58565b6000602081905290815260409020805481906103b790610fec565b80601f01602080910402602001604051908101604052809291908181526020018280546103e390610fec565b80156104305780601f1061040557610100808354040283529160200191610430565b820191906000526020600020905b81548152906001019060200180831161041357829003601f168201915b50505050509080600101805461044590610fec565b80601f016020809104026020016040519081016040528092919081815260200182805461047190610fec565b80156104be5780601f10610493576101008083540402835291602001916104be565b820191906000526020600020905b8154815290600101906020018083116104a157829003601f168201915b5050505050908060020180546104d390610fec565b80601f01602080910402602001604051908101604052809291908181526020018280546104ff90610fec565b801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b5050505050905083565b33600081815260208190526040808220815160608181019093528154929493929091908290829061058690610fec565b80601f01602080910402602001604051908101604052809291908181526020018280546105b290610fec565b80156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b5050505050815260200160018201805461061890610fec565b80601f016020809104026020016040519081016040528092919081815260200182805461064490610fec565b80156106915780601f1061066657610100808354040283529160200191610691565b820191906000526020600020905b81548152906001019060200180831161067457829003601f168201915b505050505081526020016002820180546106aa90610fec565b80601f01602080910402602001604051908101604052809291908181526020018280546106d690610fec565b80156107235780601f106106f857610100808354040283529160200191610723565b820191906000526020600020905b81548152906001019060200180831161070657829003601f168201915b5050505050815250509050600082905060008173ffffffffffffffffffffffffffffffffffffffff16633474a4a66040518163ffffffff1660e01b815260040161016060405180830381865afa158015610781573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a59190611058565b6101400151905067ffffffffffffffff8114156107c0575060005b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663df30dba08573ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610847573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261086f9190810190611111565b8560000151866020015187604001518b8873ffffffffffffffffffffffffffffffffffffffff16633474a4a66040518163ffffffff1660e01b815260040161016060405180830381865afa1580156108cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ef9190611058565b61014001516040518763ffffffff1660e01b815260040161091596959493929190611146565b600060405180830381865afa158015610932573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261095a9190810190611111565b9695505050505050565b6040805160208082018352600080835233808252918190529283206001018054606094929392919061099590610fec565b905011156109e65773ffffffffffffffffffffffffffffffffffffffff82166000908152602081815260409182902091516109d492600101910161127a565b60405160208183030381529060405290505b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d01fde8c8373ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610a6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a959190810190611111565b73ffffffffffffffffffffffffffffffffffffffff8516600090815260208181526040918290209151610acc9392918791016112ac565b6040516020818303038152906040526040518263ffffffff1660e01b8152600401610af79190610eaa565b600060405180830381865afa158015610b14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b3c9190810190611111565b9250505090565b828054610b4f90610fec565b90600052602060002090601f016020900481019282610b715760008555610bb7565b82601f10610b8a57805160ff1916838001178555610bb7565b82800160010185558215610bb7579182015b82811115610bb7578251825591602001919060010190610b9c565b50610bc3929150610bc7565b5090565b5b80821115610bc35760008155600101610bc8565b803573ffffffffffffffffffffffffffffffffffffffff81168114610c0057600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff81118282101715610c5857610c58610c05565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610c8757610c87610c05565b604052919050565b600067ffffffffffffffff821115610ca957610ca9610c05565b50601f01601f191660200190565b6000610cca610cc584610c8f565b610c5e565b9050828152838383011115610cde57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610d0657600080fd5b610d1583833560208501610cb7565b9392505050565b600080600060608486031215610d3157600080fd5b610d3a84610bdc565b9250602084013567ffffffffffffffff80821115610d5757600080fd5b610d6387838801610cf5565b93506040860135915080821115610d7957600080fd5b50610d8686828701610cf5565b9150509250925092565b600060208284031215610da257600080fd5b813567ffffffffffffffff811115610db957600080fd5b8201601f81018413610dca57600080fd5b610dd984823560208401610cb7565b949350505050565b600060208284031215610df357600080fd5b610d1582610bdc565b60005b83811015610e17578181015183820152602001610dff565b83811115610e26576000848401525b50505050565b60008151808452610e44816020860160208601610dfc565b601f01601f19169290920160200192915050565b606081526000610e6b6060830186610e2c565b8281036020840152610e7d8186610e2c565b9050828103604084015261095a8185610e2c565b600060208284031215610ea357600080fd5b5035919050565b602081526000610d156020830184610e2c565b80518015158114610c0057600080fd5b600060208284031215610edf57600080fd5b610d1582610ebd565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000610f176060830185610e2c565b828103604084015261095a8185610e2c565b600082601f830112610f3a57600080fd5b8151610f48610cc582610c8f565b818152846020838601011115610f5d57600080fd5b610dd9826020830160208701610dfc565b600080600060608486031215610f8357600080fd5b835167ffffffffffffffff80821115610f9b57600080fd5b610fa787838801610f29565b94506020860151915080821115610fbd57600080fd5b610fc987838801610f29565b93506040860151915080821115610fdf57600080fd5b50610d8686828701610f29565b600181811c9082168061100057607f821691505b6020821081141561103a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b805167ffffffffffffffff81168114610c0057600080fd5b6000610160828403121561106b57600080fd5b611073610c34565b61107c83610ebd565b815261108a60208401610ebd565b6020820152604083015160408201526110a560608401611040565b60608201526110b660808401611040565b60808201526110c760a08401611040565b60a08201526110d860c08401611040565b60c082015260e0838101519082015261010080840151908201526101208084015190820152610140928301519281019290925250919050565b60006020828403121561112357600080fd5b815167ffffffffffffffff81111561113a57600080fd5b610dd984828501610f29565b60c08152600061115960c0830189610e2c565b828103602084015261116b8189610e2c565b9050828103604084015261117f8188610e2c565b905082810360608401526111938187610e2c565b6080840195909552505060a00152949350505050565b8054600090600181811c90808316806111c357607f831692505b60208084108214156111fe577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b81801561121257600181146112415761126e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061126e565b60008881526020902060005b868110156112665781548b82015290850190830161124d565b505084890196505b50505050505092915050565b7f222c2022696d616765223a20220000000000000000000000000000000000000081526000610d15600d8301846111a9565b7f7b226e616d65223a2022000000000000000000000000000000000000000000008152600084516112e481600a850160208901610dfc565b7f222c20226465736372697074696f6e223a202200000000000000000000000000600a9184019182015261131b601d8201866111a9565b9050835161132d818360208801610dfc565b7f227d00000000000000000000000000000000000000000000000000000000000091019081526002019594505050505056fea2646970667358221220497b04b6a9bf0acdea646edb4053c46bf6df3409ac2ad013620cdce25d40e62364736f6c634300080a0033'

type EditionMetadataRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: EditionMetadataRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class EditionMetadataRenderer__factory extends ContractFactory {
  constructor(...args: EditionMetadataRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _sharedNFTLogic: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EditionMetadataRenderer> {
    return super.deploy(
      _sharedNFTLogic,
      overrides || {}
    ) as Promise<EditionMetadataRenderer>
  }
  override getDeployTransaction(
    _sharedNFTLogic: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sharedNFTLogic, overrides || {})
  }
  override attach(address: string): EditionMetadataRenderer {
    return super.attach(address) as EditionMetadataRenderer
  }
  override connect(signer: Signer): EditionMetadataRenderer__factory {
    return super.connect(signer) as EditionMetadataRenderer__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): EditionMetadataRendererInterface {
    return new utils.Interface(_abi) as EditionMetadataRendererInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EditionMetadataRenderer {
    return new Contract(address, _abi, signerOrProvider) as EditionMetadataRenderer
  }
}
